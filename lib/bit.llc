> require "core.llc"

A (currently underdeveloped) library for working with Bit vectors.

> external bitBit     {primBitBit n}           :: Ix n -> Bit n
> external bitSet     {primBitSetBit n},
>          bitClear   {primBitClearBit n},
>          bitFlip    {primBitFlipBit n}       :: Bit n -> Ix n -> Bit n
> external bitTest    {primBitTestBit n}       :: Bit n -> Ix n -> Bool

> export min, max :: Bit n -> Bit n -> Bit n
> x `min` y        = if y < x then y else x
> x `max` y        = if x < y then y else x

> external bitl   {primBitFromLiteral   v n} :: ProxyNat v -> Bit n
> external nzbitl {primNZBitFromLiteral v n} :: ProxyNat v -> NZBit n

> export bit0, bit1, bit2 :: Bit n
> bit0 = bitl#0
> bit1 = bitl#1
> bit2 = bitl#2

> export bitDec  :: Bit n -> Bit n
> bitDec n        = n - bit1

> external bitsHi {primBitsHi n m} :: Bit n -> Bit m   -- requires n>=m
> external bitsLo {primBitsLo n m} :: Bit n -> Bit m   -- requires n>=m

> external fromBits {primBitToBitdata n bt} :: Bit n -> bt  -- requires bitdata type bt
> external toBits   {primBitdataToBit bt n} :: bt -> Bit n  -- requires bitdata type bt

